<?php

namespace Frogg\Time;

/**
 * @deprecated Use magroski/time-buddy
 */
class DateInterval
{

    /** @var int $time */
    private $time;

    /**
     * If only $time is passed, it'll calculate the interval between time() and $time.
     * If $time and $laterTime are passed, it'll calculate the interval between $laterTime and $time.
     *
     * @param int   $time      Unix timestamp generated by time() or mktime() functions
     * @param mixed $laterTime Same as $time, but $laterTime must always represent a moment that happened after $time
     */
    public function __construct(int $time, $laterTime = false)
    {
        if ($laterTime !== false) { //0 is a valid time
            $this->time = $laterTime - $time;
        } else {
            $this->time = time() - $time;
        }
    }

    /**
     * @return int Interval in years
     */
    public function toYears() : int
    {
        return floor($this->toDays() / 365);
    }

    /**
     * @return int Interval in months
     */
    public function toMonths() : int
    {
        return floor(($this->toDays()) / 30);
    }

    /**
     * @return int Interval in days
     */
    public function toDays() : int
    {
        return floor(($this->toHours()) / 24);
    }

    /**
     * @return int Interval in hours
     */
    public function toHours() : int
    {
        return floor(($this->toMinutes()) / 60);
    }

    /**
     * @return int Interval in minutes
     */
    public function toMinutes() : int
    {
        return floor(($this->toSeconds()) / 60);
    }

    /**
     * @return int Interval in seconds
     */
    public function toSeconds() : int
    {
        return $this->time * 1;
    }

}
